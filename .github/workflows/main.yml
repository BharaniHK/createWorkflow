name: Check For Changes to Monitored Files

on:
  push:
    branches: 
     - main
  pull_request:
    branches:
      - main
      - development
       
jobs:
  check_changes_and_alert:
    runs-on: ubuntu-latest

    steps: 
    - name: Checkout code
      uses: actions/checkout@v3 
      with:
       fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}

    - name: Check and Alert if watched files changed
      id: check-and-alert
      run: |
        changed_files=$(git diff --name-only HEAD^ HEAD)
         
         for file in $changed_files; do
            if [[ $file == *.html || $file == *.jsx ]]; then
              # Get the differences for the name attribute
                # Extract the old and new name values
                
                old_value=$(git show ${{ github.event.before }}:$file | grep -E 'name=' | sed -n 's/.*name="\([^"]*\)".*/\1/p' )
                old_line==$(git show ${{ github.event.before }}:$file | grep -E 'name=' )
                new_value=$(git show ${{ github.sha }}:$file | grep -E 'name=' | sed -n 's/.*name="\([^"]*\)".*/\1/p' )
                echo "$old_line" and old line
             #   echo "$old_value" and "$new_value"

              # Print old values
                echo "Old name values in $file:"
                while IFS= read -r old1; do
                 echo " Old Value: '$old1'"
                 old_values_array+=("$old1")   
                #  grep 'name=\$old1' $file1
                  pattern="name=$old1"
                  line=$(grep "$pattern" $file1)
                  echo "$line"
                done <<< "$old_value"
                
                while IFS= read -r new1; do
                 echo " New Value: '$new1'"    
                 changed_name_values+=("$new1")   
                done <<< "$new_value"

              # Print the array of changed name values
             
              length1=${#changed_name_values[@]}
               length2=${#old_values_array[@]}
               echo "Changed name values and lengeth stored in array: '$length1' and '$length2'"
              #for value in "${changed_name_values[@]}"; do
              #  echo "$value" --- new values array
              #done
              # for value in "${changed_name_values[@]}"; do
               #  echo "$value" --- old values array
              #done
               # if [ "$old_value" != "$new_value" ]; then
                #  echo "Updated name value: $new_value"
                #  echo "Old name value: $old_value"
                #fi
              for (( i=0; i<length1; i++ )); do
                if [ "${changed_name_values[i]}" != "${old_values_array[i]}" ]; then
                    echo "Index $i: Name Attributes that are updated -  '${old_values_array[i]}' is updated to '${changed_name_values[i]}'"
              
                  #echo "Index $i: Name attributes that are matching - '${changed_name_values[i]}'"
                
                fi
              done
                
            fi
          done
